FROM ubuntu:jammy

ARG TZ=Europe/London
ENV TZ=${TZ}

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update &&\
 yes | unminimize

# default Ubuntu 22 includes only ARM packages; need both ARM and x86
COPY --chown=root:root sources.list /etc/apt/sources.list

# x86-64 arch support
RUN apt-get -y install \
 binfmt-support && \
 dpkg --add-architecture amd64 && \
 apt-get update && \
 apt-get upgrade

# dev tools
RUN apt-get -y install \
 binutils-doc \
 cpp-doc \
 gcc-doc \
 g++ \
 gdb \
 gdb-doc \
 glibc-doc \
 make \
 make-doc \
 clang \
 clang-14-doc \
 lldb \
 cmake \
 qemu-system-x86

# utilities
RUN apt-get -y install \
 linux-tools-generic \
 strace \
 bc \
 curl \
 dc

# editors, misc
RUN apt-get -y install \
 emacs \
 git \
 git-doc \
 man \
 micro \
 nano \
 vim \
 psmisc \
 sudo \
 wget \
 libreadline-dev \
 locales

# cross-compilation to x86-64 target
RUN apt-get -y install \
 g++-11-x86-64-linux-gnu \
 gdb-multiarch \
 libc6:amd64 \
 libstdc++6:amd64 \
 libasan5:amd64 \
 libtsan0:amd64 \
 libubsan1:amd64 \
 libreadline-dev:amd64 \
 qemu-user

# put all cross-compilation binaries in one dir under standard names
RUN for i in addr2line c++filt cpp-11 g++-11 gcc-11 gcov-11 gcov-dump-11 gcov-tool-11 size strings; do \
        ln -s /usr/bin/x86_64-linux-gnu-$i /usr/x86_64-linux-gnu/bin/$i; done && \
 ln -s /usr/bin/x86_64-linux-gnu-cpp-11 /usr/x86_64-linux-gnu/bin/cpp && \
 ln -s /usr/bin/x86_64-linux-gnu-g++-11 /usr/x86_64-linux-gnu/bin/c++ && \
 ln -s /usr/bin/x86_64-linux-gnu-g++-11 /usr/x86_64-linux-gnu/bin/g++ && \
 ln -s /usr/bin/x86_64-linux-gnu-gcc-11 /usr/x86_64-linux-gnu/bin/gcc && \
 ln -s /usr/bin/x86_64-linux-gnu-gcc-11 /usr/x86_64-linux-gnu/bin/cc && \
 ln -s /usr/bin/gdb-multiarch /usr/x86_64-linux-gnu/bin/gdb

# create user "user"; no password needed for sudo
RUN useradd -m -s /bin/bash user && \
 echo "user ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/0019-init

# human name and email address of student; change to your own; note backslash
# required before space between first and last names in USER!
ARG USER=0019\ User
ARG EMAIL=nobody@ucl.ac.uk

# user configuration; set up .bash_profile; put x86-64 dev tools first in path
USER user
RUN git config --global user.name "${USER}" && \
 git config --global user.email "${EMAIL}" && \
 cat /dev/null > ~/.bash_profile && \
 echo "ls -al > /dev/null" >> ~/.bash_profile && \
 echo "for i in \`mount | grep /home/user | sed 's/^.*\\(\\/home[^ ]*\\).*/\\\\1/'\`; do ls -al \$i > /dev/null ; done" >> ~/.bash_profile && \
 (echo "if test -e /run/host-services/ssh-auth.sock; then"; echo "  sudo chown user:user /run/host-services/ssh-auth.sock"; echo "fi") >> ~/.bash_profile && \
 rm -f ~/.bash_logout && \
 echo ". ~/.bashrc" >> ~/.bash_profile && \
 echo "export PATH=/usr/x86_64-linux-gnu/bin:\$PATH" >> ~/.bashrc && \
 echo "add-auto-load-safe-path ~" > ~/.gdbinit

WORKDIR /home/user
CMD ["/bin/bash", "-l"]

# closely based on a Dockerfile first contributed by Harvard DCE student
# Todd Morrill, extended by Eddie Kohler, and adapted by UCL CS 0019 staff
